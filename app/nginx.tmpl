server {
	listen [::]:80 default_server;


	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;

	return 503;
}

{{/* Should consider retrieving proper certs from a remote server, keyed by $VIRTUAL_SSL_HOST */}}
ssl_certificate /etc/nginx/ssl/server.crt;
ssl_certificate_key /etc/nginx/ssl/server.key;
ssl_session_timeout  5m;
ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS";
ssl_prefer_server_ciphers   on;

server {
	listen [::]:443 ssl spdy;

	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;

	ssl_ecdh_curve secp521r1;

    add_header Strict-Transport-Security max-age=15768000;

	return 503;
}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}
    upstream {{ $host }} {

    {{ range $index, $value := $containers }}

        {{ $addrLen := len $value.Addresses }}
        {{/* If only 1 port exposed, use that */}}
        {{ if eq $addrLen 1 }}
            {{ with $address := index $value.Addresses 0 }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
            {{ end }}

        {{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
        {{ else if $value.Env.VIRTUAL_PORT }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port $value.Env.VIRTUAL_PORT }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{ end }}
            {{ end }}

        {{/* Else default to standard web port 80 */}}
        {{ else }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port "80" }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{ end }}
            {{ end }}
            {{ end }}
    {{ end }}
    }

    server {
    	listen [::]:80;

        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        server_name  {{ $host }};
        proxy_buffering off;

        {{ range $index, $value := $containers }}
            {{ if $value.Env.SSL_ONLY }}
        rewrite        ^ https://$server_name$request_uri? permanent;
            {{ end }}
        {{ end }}

        {{ range $index, $value := $containers }}
            {{ if $value.Env.PAGESPEED }}
        include pagespeed.conf;
        pagespeed Domain {{ $host }};
                {{ end }}
        {{ end }}

        location / {
            proxy_pass http://{{ $host }};
            include /etc/nginx/proxy_params;
        }
    }

    server {
        listen [::]:443 ssl spdy;

        server_name {{ $host }};
        proxy_buffering off;

        {{ if SSLcertExists $host }}
        ssl_certificate /etc/nginx/ssl/{{ $host }}/ssl.crt;
        ssl_certificate_key /etc/nginx/ssl/{{ $host }}/ssl.key;

        resolver 8.8.8.8 8.8.4.4;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver_timeout 5s;
        {{ end }}

        ssl_session_cache  builtin:1000  shared:SSL:10m;

        ssl                        on;
        ssl_session_timeout        5m;
        ssl_protocols              SSLv3 TLSv1 TLSv1.1 TLSv1.2;

        ssl_ecdh_curve secp384r1;

        ssl_prefer_server_ciphers  On;

        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS";

        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Content-Type-Options nosniff;

        {{ range $index, $value := $containers }}
            {{ if $value.Env.PAGESPEED }}
        include pagespeed.conf;
        pagespeed Domain {{ $host }};
        pagespeed MapOriginDomain "http://{{ $host }}" "https://{{ $host }}";

                {{ end }}
        {{ end }}

        location / {
            proxy_pass http://{{ $host }};
            include /etc/nginx/proxy_params;
        }
    }
{{ end }}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}
    upstream ssl-{{ $host }} {

    {{ range $index, $value := $containers }}
        {{ if $value.Env.VIRTUAL_SSL_PORT }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port $value.Env.VIRTUAL_SSL_PORT }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{end}}
            {{end}}
        {{ else }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port "443" }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{ end }}
            {{ end }}
        {{ end }}
    {{ end }}
}

server {
    listen [::]:443 ssl spdy;

    server_name {{ $host }};
    proxy_buffering off;

    {{ if SSLcertExists $host }}
    ssl_certificate /etc/nginx/ssl/{{ $host }}/ssl.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ $host }}/ssl.key;

    resolver 8.8.8.8 8.8.4.4;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver_timeout 5s;
    {{ end }}

    ssl_session_cache  builtin:1000  shared:SSL:10m;

    ssl                        on;
    ssl_session_timeout        5m;
    ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;

    ssl_ecdh_curve secp384r1;

    ssl_prefer_server_ciphers  On;

    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS";

    add_header Strict-Transport-Security max-age=15768000;
    add_header X-Content-Type-Options nosniff;

    {{ range $index, $value := $containers }}
            {{ if $value.Env.PAGESPEED }}
    include pagespeed.conf;
    pagespeed Domain {{ $host }};
            {{ end }}
    {{ end }}

    location / {
        proxy_pass https://ssl-{{ $host }};
        include /etc/nginx/proxy_params;
    }
}

{
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	server_name fedwiki.djon.es;

	proxy_buffering off;

	include pagespeed.conf;
	pagespeed Domain fedwiki.djon.es;

	location / {
            proxy_pass http://fedwiki.djon.es
            include /etc/nginx/proxy_params;
    }
}

{{ end }}
